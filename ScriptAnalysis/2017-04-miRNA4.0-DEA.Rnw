
<<setDirs,echo=FALSE>>=
mainDir <-getwd()
workingDir <- mainDir
dataDir <-file.path(mainDir, "dades")
resultsDir <- file.path(workingDir, "results")
imagesDir<-file.path(mainDir,"images")
@

<<options,echo=FALSE>>=
require(knitr)
opts_chunk$set(fig.path = imagesDir, echo=FALSE, message=FALSE,warnings = FALSE )
options(warn=-1)
@

<<loadData,echo=FALSE>>=
load(file.path(dataDir,"normData.Rda"))
@


<<writeNormalized,echo=FALSE>>=
library(oligo)
write.csv2(exprs(eset_rma1), file.path(resultsDir, "Normalized.csv"),row.names = TRUE)
@ 

\subsection{Filtering of the Data}
Usually, in order to increase statistical power and reduce unnecessary noise it is necesary to remove some genes. In this array (\texttt{GeneChip miRNA 4.0 array}), a lot of species, apart from \textit{Homo sapiens}, are included. This study is focused on human miRNAs, therefore, the rest of the species has to be removed from the data.
<<loadanota,echo=FALSE,results='hide'>>=
#es llegeix un arxiu d'anotacions que s'ha baixat de la web de affymetrix
anotacions <- read.csv(file.path(dataDir,"miRNA-4_0-st-v1.annotations.mod.csv"),sep=",",header=TRUE)
#les columnes surten mal perque hi ha una data que està separada per una coma. Es mira de ficar els rownames com a primera columna i després es posa el nom definitiu a les columnes.
library(dplyr)
anotacions2 <- add_rownames(anotacions,"Probe.Set.ID2")
colnames(anotacions2) <- c("Probe.Set.ID","Probe.Set.Name","Accession",
                           "Transcript.ID.Array.Design.","Sequence.Type",
                           "Species.Scientific.Name","Alignments","Sequence.Length",
                           "Sequence","Genome.Context","Clustered.miRNAs.within.10kb",
                           "Target.Genes","GeneChip.Array","Annotation.Date","Year",
                           "Sequence.Source")

#es seleccionen del fitxer d'anotacions els humans
Hanotacions <- anotacions2[which(anotacions2$Species.Scientific.Name == "Homo sapiens"),]

#es grava a un arxiu perque formi part dels resultats
write.csv2(Hanotacions,file.path(resultsDir,"Anotations.miRNA.human.csv"),sep=";")
@

<<onlyHuman,echo=FALSE,results='hide'>>=

data1 <- as.data.frame(exprs(eset_rma1))
data1.1 <- add_rownames(data1,"Probe.Set.Name")
#en data1 els rownames sembla que son Probe.Set.Name. Filtrem per això doncs
end.data1 <- merge(data1.1,Hanotacions,by="Probe.Set.Name")

data2 <- as.data.frame(exprs(eset_rma2))
data2.2 <- add_rownames(data2,"Probe.Set.Name")
#en data1 els rownames sembla que son Probe.Set.Name. Filtrem per això doncs
end.data2 <- merge(data2.2,Hanotacions,by="Probe.Set.Name")

#es tornen a deixar els Probesetnames com a rownames per fer el limma
rownames(end.data1) <- end.data1$Probe.Set.Name 
rownames(end.data2) <- end.data2$Probe.Set.Name 
end.data1 <- end.data1[,-c(1,41:55)]
end.data2 <- end.data2[,-c(1,40:54)]
@

After removing miRNA from other species, the data to be included in the analysis is a list of \textbf{6.631 probes} (before removing the other species the length of the data was 36.353 probes). 

\subsection{Selection of Differentially Expressed Genes}
As previously commented (\ref{objectives}) the goal of the study is to find differentially expressed miRNAs between patients who have suffered a dysfunction of the lung transplant and patients who have not have not had dysfunction.
To achieve this main objective different specific comparisons has been performed:
\begin{itemize}
\item Effect of \textit{Dysfunction} condition:
  \begin{enumerate}
    \item Caso vs CTL = Caso - CTL (paired test) 
    \item Caso vs CTL = Caso - CTL (unpaired test) 
  \end{enumerate}
\end{itemize}

\\
The analysis to select differentially expressed genes has been
based on adjusting a linear model with empirical bayes moderation of the variance. This is a technique similar to ANOVA specifically developed for microarray data
analysis by Gordon K. Smyth in 2004 \cite{Smyth:2004}.
\\
Each comparison yields a list of genes sorted from most to least differentially expressed
genes which is called generically a top table. The resulting top tables are presented in an csv file. Besides for each comparisons the corresponding Volcano Plot is provided in the \texttt{results} folder.
\\

<<setContrasts, echo=FALSE,results='hide'>>=
##set contrast for PAIRED comparison 
require(limma)
pacient2 <- as.factor(targets2$Patient)
grupo2 <- as.factor(targets2$Grupo)
designPaired2 <- model.matrix( ~0 + grupo2 + pacient2)

dim(designPaired2) #38 20
qr(as.matrix(designPaired2))$rank #20
is.fullrank(as.matrix(designPaired2)) #TRUE
colnames(designPaired2)<-c( "Caso",  "Control","Pacient2","Pacient4","Pacient5",
                            "Pacient6","Pacient7","Pacient8","Pacient9",
                           "Pacient10","Pacient11","Pacient12","Pacient13","Pacient14",
                           "Pacient15","Pacient16","Pacient17","Pacient18","Pacient19",
                           "Pacient20")

contrastM_Paired <- makeContrasts(CasevsCTL = Caso - Control,
                                levels=designPaired2)
print(contrastM_Paired)


##set contrast for UNPAIRED comparison
pacient1 <- as.factor(targets1$Patient)
grupo1 <- as.factor(targets1$Grupo)
design1 <- model.matrix( ~ 0 + grupo1)        
colnames(design1)<-c("Caso","Control")
rownames(design1)<-targets1$ShortName
print(design1)

dim(design1) #39 2
qr(as.matrix(design1))$rank #2
is.fullrank(as.matrix(design1)) #TRUE
contrastsMatrix1 <- makeContrasts(CasevsCTL = Caso - Control,
                                 levels = design1)
print(contrastsMatrix1)
@


<<linearmodelfit,echo=FALSE>>=
fit.1<-lmFit(end.data1, design1)
fit.main.1<-contrasts.fit(fit.1, contrastsMatrix1)
fit.main.1<-eBayes(fit.main.1)

fit2<-lmFit(end.data2, designPaired2)
fit.main.2<-contrasts.fit(fit2, contrastM_Paired)
fit.main.2<-eBayes(fit.main.2)
@

<<topTables, echo=FALSE, results='hide',message=FALSE>>=
###UNParired comparison
topTab_CasovsCTL <- topTable (fit.main.1, number=nrow(fit.main.1), coef="CasevsCTL", adjust="fdr")

###Paired comparison
topTab_CasovsCTL.Paired <- topTable (fit.main.2, number=nrow(fit.main.2), coef="CasevsCTL", adjust="fdr")
@

The results of the number of differentially expressed genes in each comparisons at different thresholds are shown in table \ref{tab:numgeneschanged}:
\newpage

<<numsgenechange,echo=FALSE,results='hide'>>=
################################################################################
####################
##### geneSelectable
####################
##### topTab: Toptable en format '.csv'
##### adj0: p.valor adjustat pel qual filtrar (de normal, 0.01)
##### adj1: segon p.valor adjustat pel qual filtrar (de normal, 0.05)
##### adj2: tercer p.valor adjustat pel qual filtrar (de normal, 0.25)
##### P1: p.valor pel qual filtrar (de normal, 0.01)
##### P2: segon p.valor pel qual filtrar (de normal, 0.05)
################################################################################
genesSelectable <- function (topTab, adj0, adj1, adj2, P1, P2,FC=0)
{
  upBelowB <- sum(topTab$B > 0  & topTab$t > 0 & abs(topTab$logFC) > FC)
  downBelowB <- sum(topTab$B > 0  & topTab$t < 0 & abs(topTab$logFC) > FC)
  
  upBelowAdj0 <- sum(topTab$adj.P.Val < adj0 & topTab$t > 0 & abs(topTab$logFC) > FC)
  downBelowAdj0 <- sum(topTab$adj.P.Val < adj0 & topTab$t < 0 & abs(topTab$logFC) > FC)
  
  upBelowAdj1 <- sum(topTab$adj.P.Val < adj1 & topTab$t > 0 & abs(topTab$logFC) > FC)
  downBelowAdj1 <- sum(topTab$adj.P.Val < adj1 & topTab$t < 0 & abs(topTab$logFC) > FC)
  
  upBelowAdj2 <- sum(topTab$adj.P.Val < adj2 & topTab$t > 0 & abs(topTab$logFC) > FC)
  downBelowAdj2 <- sum(topTab$adj.P.Val < adj2 & topTab$t < 0 & abs(topTab$logFC) > FC)
  
  upBelowP1 <- sum(topTab$P.Value < P1 & topTab$t > 0 & abs(topTab$logFC) > FC)
  downBelowP1 <- sum (topTab$P.Value < P1 & topTab$t < 0 & abs(topTab$logFC) > FC)
  
  upBelowP2 <- sum(topTab$P.Value < P2 & topTab$t > 0 & abs(topTab$logFC) > FC)
  downBelowP2 <- sum(topTab$P.Value < P2 & topTab$t < 0 & abs(topTab$logFC) > FC)
  
  return(c(upReg_B = upBelowB,downReg_B = downBelowB,
           upRegAdj0.01 = upBelowAdj0, downRegAdj0.01 = downBelowAdj0,
           upRegAdj0.05 = upBelowAdj1, downRegAdj0.05 = downBelowAdj1,
           upRegAdj0.25 = upBelowAdj2, downRegAdj0.25 = downBelowAdj2,
           upRegP0.01 = upBelowP1, downRegP0.01 = downBelowP1,
           upRegP0.05 = upBelowP2, downRegP0.05 = downBelowP2))   
}

CasovsCTL<-genesSelectable(topTab_CasovsCTL,0.01,0.05,0.25,0.01,0.05)
CasovsCTL.paired<-genesSelectable(topTab_CasovsCTL.Paired,0.01,0.05,0.25,0.01,0.05)

#fem el data frame
numGenesChanged<-cbind.data.frame(CasovsCTL,CasovsCTL.paired)
write.csv2(numGenesChanged,file.path(resultsDir,"numGenesChanged.csv"),sep=";")
@


<<numgenetable,results='asis',echo=FALSE>>=
library(xtable)
x.big2 <- xtable(numGenesChanged,caption="Number of DEG for different thresholds",label="tab:numgeneschanged")
print(x.big2, tabular.environment = 'longtable', floating = FALSE,size="tiny")
@

\subparagraph{p-values adjustment}

If one wishes to have a statistically grounded criteria, the selection of the differentially expressed genes should be based on adjusted p-values (less than 0.01) or $B$ statistic (greater than 0). If these criteria yield too few genes, the table \ref{tab:numgeneschanged} indicates how many genes will yield a less restrictive criteria such as calling those differentially expressed genes with, for instance, adjusted p-values less than 0.25 or unadjusted p-values smaller than 0.05.\\

<<arreglatoptab,echo=FALSE,results='hide'>>=
#aquí afegim el nom del miRNA per tal de que sorti a la topTable i grabem el csv
##llista topTab_CasovsCTL
head(Hanotacions)
anotaTop <- Hanotacions[,c(2:4)]
head(anotaTop)

topTab_CasovsCTL.anotada <- add_rownames(topTab_CasovsCTL,"Probe.Set.Name")
head(topTab_CasovsCTL.anotada)
topTab_CasovsCTL.anotada <- merge(topTab_CasovsCTL.anotada,anotaTop,by="Probe.Set.Name")

topTab_CasovsCTL.anotada <- topTab_CasovsCTL.anotada[order(-topTab_CasovsCTL.anotada$B),]
topTab_CasovsCTL.anotada <- topTab_CasovsCTL.anotada[,c(9,2:8,1)]

colnames(topTab_CasovsCTL.anotada) <- c("Symbol","logFC","AveExpr","t","P.Value",
                                               "adj.P.Val","B","Accession","Probe.Set.Name")
write.csv2(topTab_CasovsCTL.anotada,file.path(resultsDir,"topTab_CasovsCTL.csv"),row.names = FALSE)

##llista topTab_CasovsCTL.Paired
topTab_CasovsCTL.Paired.anotada <- add_rownames(topTab_CasovsCTL.Paired,"Probe.Set.Name")
head(topTab_CasovsCTL.Paired.anotada)
topTab_CasovsCTL.Paired.anotada <- merge(topTab_CasovsCTL.Paired.anotada,anotaTop,by="Probe.Set.Name")

topTab_CasovsCTL.Paired.anotada <- topTab_CasovsCTL.Paired.anotada[order(-topTab_CasovsCTL.Paired.anotada$B),]
topTab_CasovsCTL.Paired.anotada <- topTab_CasovsCTL.Paired.anotada[,c(9,2:8,1)]

colnames(topTab_CasovsCTL.Paired.anotada) <- c("Symbol","logFC","AveExpr","t","P.Value",
                                               "adj.P.Val","B","Accession","Probe.Set.Name")
write.csv2(topTab_CasovsCTL.Paired.anotada,file.path(resultsDir,"topTab_CasovsCTL.Paired.csv"),row.names = FALSE)
@


In tables \ref{tab:top1} and \ref{tab:top2} the 10 more differentially expressed genes for each comparisons can be found.

<<topGenes1, echo=FALSE, results='asis'>>=
csvtable1<-xtable(topTab_CasovsCTL.anotada[1:10,1:9],caption="10 genes more differentially expressed in comparison CasovsCTL",label="tab:top1")
print(csvtable1, tabular.environment='longtable',floating=FALSE,size="tiny",include.rownames=FALSE)
@


<<topGenes2, echo=FALSE, results='asis'>>=
csvtable2<-xtable(topTab_CasovsCTL.Paired.anotada[1:10,1:9],caption="10 genes more differentially expressed in comparison CasovsCTL.Paired",label="tab:top2")
print(csvtable2, tabular.environment='longtable',floating=FALSE,size="tiny",include.rownames=FALSE)
@

<<volcanos2pdf,echo=FALSE>>=
require(calibrate)

listofcsv<-list(topTab_CasovsCTL.anotada,topTab_CasovsCTL.Paired.anotada)
listofcomparnames<-c("CasovsCTL","CasovsCTL.Paired") 

for(i in 1:length(listofcsv)){
csv<-listofcsv[[i]]
file=paste("VolcanoPlot", listofcomparnames[i], ".pdf", sep="")
pdf(file=file.path(resultsDir, file), paper="special", width=6, height=6)
with(csv, plot(logFC, -log10(P.Value), pch=20, main=paste("Volcano plot for:",listofcomparnames[i], sep=" "), xlim=c(min(csv$logFC),max(csv$logFC))))
abline(v=-0.5,lty=3)
abline(v=0.5,lty=3)
with(subset(csv, adj.P.Val<.05 & abs(logFC)>0.5), points(logFC, -log10(P.Value), pch=20, col="green"))
with(subset(csv, adj.P.Val<.05 & abs(logFC)>0.5), textxy(logFC, -log10(P.Value), labs=Symbol, cex=.7,offset=0.3))
dev.off()
}
@
%' \normalsize
%' In figure \ref{fig:volcano} the Volcano plot for each comparison can be found:
%' 
%' <<volcanos,echo=FALSE,results='hide',message=FALSE>>=
%' listofcsv<-list(topTab_CasovsCTL.anotada,topTab_CasovsCTL.Paired.anotada)
%' listofcomparnames<-c("CasovsCTL","CasovsCTL.Paired") 
%' 
%' ##es fan tots els volcanos en un pdf per ficar al main report
%' pdf(file.path(resultsDir,"Volcanos.pdf"))
%' par(mfrow=c(2,1))
%' for(i in 1:length(listofcsv)){
%' csv<-listofcsv[[i]]
%' with(csv, plot(logFC, -log10(P.Value), pch=20, main=paste("Volcano plot for:",listofcomparnames[i], sep=" "), xlim=c(min(csv$logFC),max(csv$logFC))))
%' abline(v=-0.5,lty=3)
%' abline(v=0.5,lty=3)
%' with(subset(csv, adj.P.Val<.05 & abs(logFC)>0.5), points(logFC, -log10(P.Value), pch=20, col="green"))
%' with(subset(csv, adj.P.Val<.05 & abs(logFC)>0.5), textxy(logFC, -log10(P.Value), labs=Symbol, cex=.7,offset=0.3))
%' }
%' dev.off()
%' par(mfrow=c(1,1))
%' @

\begin{figure}[htbp]
\centering
\includegraphics[scale=0.3]{results/VolcanoPlotCasovsCTL.pdf}
  \caption{Volcano plot for CasovsCTL comparison.}
  \label{fig:volcano1}
\end{figure}

\begin{figure}[htbp]
\centering
\includegraphics[scale=0.3]{results/VolcanoPlotCasovsCTLPaired.pdf}
  \caption{Volcano plot for CasovsCTL.Paired comparison.}
  \label{fig:volcano2}
\end{figure}



<<saveRDA,echo=FALSE>>=
save(topTab_CasovsCTL.anotada,topTab_CasovsCTL.Paired.anotada,topTab_CasovsCTL,topTab_CasovsCTL.Paired, targets,targets1,targets2,fit.main.1,fit.main.2,end.data1, end.data2,Hanotacions,anotacions2, listofcsv,listofcomparnames, file=file.path(dataDir,"afterTopTabs.Rda"))
@

